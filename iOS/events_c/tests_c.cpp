#include "properties_c.h"#include "events_c.h"#include "variant_c.h"#include <stdio.h>int PaulSet(void *context, const char *event, const char *info){    printf("paul set! wow: %s; ", info);    Variant value = Property_Get(event);    if (value.type == VariantType_String)        printf("TO VALUE : %s\n", value.string);    else        printf("\n");    return 0;}int RebekkaSet(void *context, const char *event, const char *info){    printf("rebekka set! wow: %s; ", info);    Variant value = Property_Get(event);    if (value.type == VariantType_String)        printf("TO RALUE : %s\n", value.string);    else        printf("\n");    return 0;}int DylanSet(void *context, const char *event, const char *info){    printf("dylan set! wow: %s; ", info);    Variant value = Property_Get(event);    if (value.type == VariantType_String)        printf("TO DYALUE : %s\n", value.string);    else        printf("\n");    return 0;}extern "C" void test_c_compatible_code(){    const char *strings[] = { "Paul", "Rebekka", "Dylan", "Gabby", "Caroline", "Kayla", 0 };    Event_function_t functions[] = { PaulSet, RebekkaSet, DylanSet, 0, 0, 0, 0 };    for (int i = 0; strings[i]; i++)    {        if (functions[i])        {            EventHandler eh = Events_MakeHandler(functions[i], 0, EventFlag_Immediate);            Property_RegisterSetEvent(strings[i], &eh);        }    }    Property_Set("Rebekka", Variant_String("Hello!"));    for (int i = 0; strings[i]; i++)        Property_Set(strings[i], Variant_String("What?"));}