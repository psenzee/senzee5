#ifndef _FILE_H#define _FILE_H#include <string>#include <sys/stat.h>#ifdef WIN32#define platform_stat _stat#else#define platform_stat  stat#endifnamespace file{struct buffer_t{    void   *data;    size_t  size;        inline buffer_t(void *data = 0, size_t size = 0) : data(data), size(size) {}};buffer_t     read_file(const char *filename);std::string  read_file_string(const char *filename);bool         status(const char *fn, struct platform_stat *st);bool         status(int fd, struct stat *st);bool         is_directory(const char *path);bool         is_directory(int hd);time_t       time_modified(const char *filename);time_t       time_modified(int hd);size_t       file_size(const char *filename);size_t       file_size(int hd);bool         path_exists(const char *filename);bool         path_exists(int hd);bool         read_only(const char *path);void         make_path(const char *dir, const char *file, std::string &path);const char  *fopen_error();}#endif  // _FILE_H