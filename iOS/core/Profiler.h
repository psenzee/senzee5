#ifndef _PROFILER_H#define _PROFILER_H#include <map>#include <string>#include <vector>class Profiler{public:    Profiler(const char *filename, const char **elements, int flushfrequency = 0);    ~Profiler();    void StartFrame(const char *name = 0);    void EndFrame();    void SetTime(const char *name, unsigned time);    void StartTime(const char *name);    void EndTime(const char *name);private:    FILE                            *file;    std::vector<std::string>         elements;    std::map<std::string, unsigned>  times;    unsigned                         total,                                     frame;    int                              flushfrequency;    std::string                      name;    void WriteHeader();};#endif // _PROFILER_H