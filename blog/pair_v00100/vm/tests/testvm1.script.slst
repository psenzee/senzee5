; file 'testvm.script.slst'
; total code size 803

; bytecode

; constants --
; 29 00 00 00 06 13 00 00 00 74 68 69 73 2d 69 73
; 2d 6d 79 2d 66 75 6e 63 74 69 6f 6e 04 03 00 00
; 00 41 3a 20 04 04 00 00 00 20 42 3a 20 04 04 00
; 00 00 20 43 3a 20 06 07 00 00 00 70 72 69 6e 74
; 6c 6e 04 06 00 00 00 4d 61 74 68 3a 20 00 0d 00
; 00 00 00 0c 00 00 00 00 2a 00 00 00 00 54 00 00
; 00 00 5b 00 00 00 00 64 00 00 00 00 05 00 00 00
; 05 01 00 00 00 61 05 01 00 00 00 62 05 01 00 00
; 00 63 05 01 00 00 00 64 05 01 00 00 00 65 05 01
; 00 00 00 66 05 01 00 00 00 67 07 13 00 ff ff 07
; 12 00 14 00 07 11 00 15 00 07 10 00 16 00 07 0f
; 00 17 00 07 0e 00 18 00 07 0d 00 19 00 04 15 00
; 00 00 41 6e 20 49 6d 70 6f 72 74 61 6e 74 20 51
; 75 65 73 74 69 6f 6e 04 14 00 00 00 44 6f 20 79
; 6f 75 20 70 72 65 66 65 72 20 68 65 6c 6c 6f 20
; 04 02 00 00 00 3f 3f 06 06 00 00 00 63 6f 6e 63
; 61 74 06 03 00 00 00 61 73 6b 04 09 00 00 00 68
; 65 6c 6c 6f 21 20 20 20 04 09 00 00 00 67 6f 6f
; 64 62 79 65 21 20 00 00 00 00 00 02 00 00 80 3f
; 06 0b 00 00 00 73 74 61 72 74 2d 74 69 6d 65 72
; 00 40 42 0f 00 06 05 00 00 00 72 61 6e 67 65 06
; 05 00 00 00 74 69 6d 65 72 04 11 00 00 00 64 69
; 64 20 79 6f 75 20 67 65 74 20 74 68 61 74 3f

; constants (data) -- 
; 0      [ConstFunction]               'this-is-my-function'
; 1      [String]                      'A: '
; 2      [String]                      ' B: '
; 3      [String]                      ' C: '
; 4      [ConstFunction]               'println'
; 5      [String]                      'Math: '
; 6      [PrimitiveT<int>]             '13'
; 7      [PrimitiveT<int>]             '12'
; 8      [PrimitiveT<int>]             '42'
; 9      [PrimitiveT<int>]             '84'
; 10     [PrimitiveT<int>]             '91'
; 11     [PrimitiveT<int>]             '100'
; 12     [PrimitiveT<int>]             '5'
; 13     [Identifier]                  'a'
; 14     [Identifier]                  'b'
; 15     [Identifier]                  'c'
; 16     [Identifier]                  'd'
; 17     [Identifier]                  'e'
; 18     [Identifier]                  'f'
; 19     [Identifier]                  'g'
; 20     [Pair]                        '(g)'
; 21     [Pair]                        '(f g)'
; 22     [Pair]                        '(e f g)'
; 23     [Pair]                        '(d e f g)'
; 24     [Pair]                        '(c d e f g)'
; 25     [Pair]                        '(b c d e f g)'
; 26     [Pair]                        '(a b c d e f g)'
; 27     [String]                      'An Important Question'
; 28     [String]                      'Do you prefer hello '
; 29     [String]                      '??'
; 30     [ConstFunction]               'concat'
; 31     [ConstFunction]               'ask'
; 32     [String]                      'hello!   '
; 33     [String]                      'goodbye! '
; 34     [PrimitiveT<int>]             '0'
; 35     [PrimitiveT<float>]           '1'
; 36     [ConstFunction]               'start-timer'
; 37     [PrimitiveT<int>]             '1000000'
; 38     [ConstFunction]               'range'
; 39     [ConstFunction]               'timer'
; 40     [String]                      'did you get that?'

; code

; function 'MAIN' id=-1 localsize=64 stacksize=10
; 05 0c 00 00 00 05 0b 00 00 00 2e 05 0a 00 00 00
; 2b 05 09 00 00 00 05 08 00 00 00 2d 05 07 00 00
; 00 2b 2b 05 06 00 00 00 2b 05 05 00 00 00 66 04
; 00 00 00 09 02 05 1a 00 00 00 0f 00 00 00 00 52
; 00 00 00 00 0f 00 00 00 00 4f 00 00 00 00 07 58
; 00 50 00 00 00 00 0f 01 00 00 00 05 1d 00 00 00
; 04 01 00 00 00 05 1c 00 00 00 66 1e 00 00 00 09
; 03 05 1b 00 00 00 66 1f 00 00 00 09 02 07 14 00
; 04 01 00 00 00 05 20 00 00 00 66 04 00 00 00 09
; 02 08 11 00 04 01 00 00 00 05 21 00 00 00 66 04
; 00 00 00 09 02 0c 08 a0 ff 05 22 00 00 00 0f 02
; 00 00 00 05 1a 00 00 00 0f 03 00 00 00 52 03 00
; 00 00 0f 03 00 00 00 4f 03 00 00 00 07 34 00 50
; 03 00 00 00 0f 01 00 00 00 05 23 00 00 00 04 02
; 00 00 00 2b 0f 02 00 00 00 04 02 00 00 00 04 01
; 00 00 00 04 02 00 00 00 66 00 00 00 00 09 03 0c
; 08 c4 ff 04 02 00 00 00 66 04 00 00 00 09 01 66
; 24 00 00 00 09 00 05 25 00 00 00 05 22 00 00 00
; 66 26 00 00 00 09 02 0f 04 00 00 00 52 04 00 00
; 00 0f 04 00 00 00 4f 04 00 00 00 07 0e 00 50 04
; 00 00 00 0f 01 00 00 00 0c 08 ea ff 66 27 00 00
; 00 09 00 66 04 00 00 00 09 01 05 28 00 00 00 66
; 1f 00 00 00 09 01 0e

; function 'this-is-my-function' id=0 localsize=3 stacksize=64
; 14 03 00 04 02 00 00 00 05 03 00 00 00 04 01 00
; 00 00 05 02 00 00 00 04 00 00 00 00 05 01 00 00
; 00 66 04 00 00 00 09 06 15


;  function 'MAIN' id=-1 localsize=64 stacksize=10
0      [ 05 0c 00 00 00]              CONST  12            ; =5
5      [ 05 0b 00 00 00]              CONST  11            ; =100
10     [ 2e]                          FDIV   
11     [ 05 0a 00 00 00]              CONST  10            ; =91
16     [ 2b]                          FADD   
17     [ 05 09 00 00 00]              CONST  9             ; =84
22     [ 05 08 00 00 00]              CONST  8             ; =42
27     [ 2d]                          FMUL   
28     [ 05 07 00 00 00]              CONST  7             ; =12
33     [ 2b]                          FADD   
34     [ 2b]                          FADD   
35     [ 05 06 00 00 00]              CONST  6             ; =13
40     [ 2b]                          FADD   
41     [ 05 05 00 00 00]              CONST  5             ; ="Math: "
46     [ 66 04 00 00 00]              FUNC   4             ; ="fn:println
51     [ 09 02]                       CALL   2                    
53     [ 05 1a 00 00 00]              CONST  26            ; =(a b c d e f g)
58     [ 0f 00 00 00 00]              LET    0             
63     [ 52 00 00 00 00]              LITER  0             
68     [ 0f 00 00 00 00]              LET    0             
73     [ 4f 00 00 00 00]              LNEXTP 0             
78     [ 07 58 00]                    JN     88            
81     [ 50 00 00 00 00]              LNEXT  0             
86     [ 0f 01 00 00 00]              LET    1             
91     [ 05 1d 00 00 00]              CONST  29            ; ="??"
96     [ 04 01 00 00 00]              LOCAL  1             
101    [ 05 1c 00 00 00]              CONST  28            ; ="Do you prefer hello "
106    [ 66 1e 00 00 00]              FUNC   30            ; ="fn:concat
111    [ 09 03]                       CALL   3                    
113    [ 05 1b 00 00 00]              CONST  27            ; ="An Important Question"
118    [ 66 1f 00 00 00]              FUNC   31            ; ="fn:ask
123    [ 09 02]                       CALL   2                    
125    [ 07 14 00]                    JN     20            
128    [ 04 01 00 00 00]              LOCAL  1             
133    [ 05 20 00 00 00]              CONST  32            ; ="hello!   "
138    [ 66 04 00 00 00]              FUNC   4             ; ="fn:println
143    [ 09 02]                       CALL   2                    
145    [ 08 11 00]                    JMP    17            
148    [ 04 01 00 00 00]              LOCAL  1             
153    [ 05 21 00 00 00]              CONST  33            ; ="goodbye! "
158    [ 66 04 00 00 00]              FUNC   4             ; ="fn:println
163    [ 09 02]                       CALL   2                    
165    [ 0c]                          YIELD  
166    [ 08 a0 ff]                    JMP    -96             
169    [ 05 22 00 00 00]              CONST  34            ; =0
174    [ 0f 02 00 00 00]              LET    2             
179    [ 05 1a 00 00 00]              CONST  26            ; =(a b c d e f g)
184    [ 0f 03 00 00 00]              LET    3             
189    [ 52 03 00 00 00]              LITER  3             
194    [ 0f 03 00 00 00]              LET    3             
199    [ 4f 03 00 00 00]              LNEXTP 3             
204    [ 07 34 00]                    JN     52            
207    [ 50 03 00 00 00]              LNEXT  3             
212    [ 0f 01 00 00 00]              LET    1             
217    [ 05 23 00 00 00]              CONST  35            ; =1
222    [ 04 02 00 00 00]              LOCAL  2             
227    [ 2b]                          FADD   
228    [ 0f 02 00 00 00]              LET    2             
233    [ 04 02 00 00 00]              LOCAL  2             
238    [ 04 01 00 00 00]              LOCAL  1             
243    [ 04 02 00 00 00]              LOCAL  2             
248    [ 66 00 00 00 00]              FUNC   0             ; ="fn:this-is-my-function
253    [ 09 03]                       CALL   3                    
255    [ 0c]                          YIELD  
256    [ 08 c4 ff]                    JMP    -60             
259    [ 04 02 00 00 00]              LOCAL  2             
264    [ 66 04 00 00 00]              FUNC   4             ; ="fn:println
269    [ 09 01]                       CALL   1                    
271    [ 66 24 00 00 00]              FUNC   36            ; ="fn:start-timer
276    [ 09 00]                       CALL   0                    
278    [ 05 25 00 00 00]              CONST  37            ; =1000000
283    [ 05 22 00 00 00]              CONST  34            ; =0
288    [ 66 26 00 00 00]              FUNC   38            ; ="fn:range
293    [ 09 02]                       CALL   2                    
295    [ 0f 04 00 00 00]              LET    4             
300    [ 52 04 00 00 00]              LITER  4             
305    [ 0f 04 00 00 00]              LET    4             
310    [ 4f 04 00 00 00]              LNEXTP 4             
315    [ 07 0e 00]                    JN     14            
318    [ 50 04 00 00 00]              LNEXT  4             
323    [ 0f 01 00 00 00]              LET    1             
328    [ 0c]                          YIELD  
329    [ 08 ea ff]                    JMP    -22             
332    [ 66 27 00 00 00]              FUNC   39            ; ="fn:timer
337    [ 09 00]                       CALL   0                    
339    [ 66 04 00 00 00]              FUNC   4             ; ="fn:println
344    [ 09 01]                       CALL   1                    
346    [ 05 28 00 00 00]              CONST  40            ; ="did you get that?"
351    [ 66 1f 00 00 00]              FUNC   31            ; ="fn:ask
356    [ 09 01]                       CALL   1                    
358    [ 0e]                          END    

;  function 'this-is-my-function' id=0 localsize=3 stacksize=64
0      [ 14 03 00]                    PROC   3             
3      [ 04 02 00 00 00]              LOCAL  2             
8      [ 05 03 00 00 00]              CONST  3             ; =" C: "
13     [ 04 01 00 00 00]              LOCAL  1             
18     [ 05 02 00 00 00]              CONST  2             ; =" B: "
23     [ 04 00 00 00 00]              LOCAL  0             
28     [ 05 01 00 00 00]              CONST  1             ; ="A: "
33     [ 66 04 00 00 00]              FUNC   4             ; ="fn:println
38     [ 09 06]                       CALL   6                    
40     [ 15]                          RET    

