; file 'testvm2.script.slst'
; total code size 1280

; bytecode

; constants --
; 59 00 00 00 06 05 00 00 00 70 72 69 6e 74 06 0c
; 00 00 00 73 74 61 6e 64 61 72 64 2d 6f 75 74 06
; 05 00 00 00 77 72 69 74 65 06 13 00 00 00 74 68
; 69 73 2d 69 73 2d 6d 79 2d 66 75 6e 63 74 69 6f
; 6e 04 03 00 00 00 41 3a 20 04 04 00 00 00 20 42
; 3a 20 04 04 00 00 00 20 43 3a 20 04 01 00 00 00
; 0a 04 06 00 00 00 4d 61 74 68 3a 20 05 01 00 00
; 00 61 05 01 00 00 00 62 05 01 00 00 00 63 05 01
; 00 00 00 64 05 01 00 00 00 65 05 01 00 00 00 66
; 05 01 00 00 00 67 07 0f 00 ff ff 07 0e 00 10 00
; 07 0d 00 11 00 07 0c 00 12 00 07 0b 00 13 00 07
; 0a 00 14 00 07 09 00 15 00 02 00 00 80 3f 04 16
; 00 00 00 48 65 6c 6c 6f 2c 20 6d 79 20 70 72 65
; 74 74 69 65 73 21 21 21 21 04 01 00 00 00 5b 04
; 02 00 00 00 5d 20 04 10 00 00 00 41 73 6b 69 6e
; 67 20 2d 20 61 73 73 6f 63 3f 0a 04 01 00 00 00
; 20 05 06 00 00 00 61 73 73 6f 63 3f 05 01 00 00
; 00 78 05 01 00 00 00 2e 05 01 00 00 00 79 07 20
; 00 ff ff 07 1f 00 21 00 07 1e 00 22 00 07 23 00
; ff ff 07 1d 00 24 00 07 1e 00 21 00 07 26 00 ff
; ff 07 1d 00 27 00 05 05 00 00 00 63 6f 75 6e 74
; 07 29 00 ff ff 07 1d 00 2a 00 04 0f 00 00 00 41
; 73 6b 69 6e 67 20 2d 20 70 61 69 72 3f 0a 05 05
; 00 00 00 70 61 69 72 3f 07 2d 00 24 00 07 2d 00
; 27 00 07 2d 00 2a 00 04 0f 00 00 00 41 73 6b 69
; 6e 67 20 2d 20 61 74 6f 6d 3f 0a 05 05 00 00 00
; 61 74 6f 6d 3f 07 32 00 24 00 07 32 00 27 00 07
; 32 00 2a 00 04 10 00 00 00 41 73 6b 69 6e 67 20
; 2d 20 6c 65 6e 67 74 68 0a 05 06 00 00 00 6c 65
; 6e 67 74 68 05 01 00 00 00 7a 07 0b 00 ff ff 07
; 0a 00 39 00 07 09 00 3a 00 07 38 00 3b 00 07 20
; 00 3c 00 07 1e 00 3d 00 07 3e 00 ff ff 07 37 00
; 3f 00 07 37 00 27 00 07 37 00 2a 00 04 11 00 00
; 00 64 69 64 20 79 6f 75 20 67 65 74 20 74 68 61
; 74 3f 06 03 00 00 00 61 73 6b 04 12 00 00 00 54
; 68 69 73 20 69 73 20 61 20 51 75 65 73 74 69 6f
; 6e 04 0a 00 00 00 41 6e 73 77 65 72 20 49 74 21
; 07 46 00 ff ff 07 45 00 47 00 04 0e 00 00 00 55
; 73 65 72 20 61 6e 73 77 65 72 73 20 27 04 02 00
; 00 00 27 0a 04 0e 00 00 00 61 2d 6e 65 77 2d 66
; 69 6c 65 2e 74 78 74 04 01 00 00 00 61 06 0d 00
; 00 00 6f 70 65 6e 2d 6f 75 74 2d 66 69 6c 65 04
; 14 00 00 00 68 65 79 20 6c 69 74 74 6c 65 20 66
; 69 6c 65 20 32 21 21 0a 06 0f 00 00 00 6f 70 65
; 6e 2d 6f 75 74 2d 73 74 72 69 6e 67 04 04 00 00
; 00 68 6f 6c 61 04 05 00 00 00 62 6f 62 62 79 04
; 04 00 00 00 62 6f 79 21 05 06 00 00 00 73 74 72
; 65 61 6d 04 02 00 00 00 5c 74 05 03 00 00 00 61
; 73 6b 05 06 00 00 00 73 74 64 6f 75 74 06 05 00
; 00 00 63 6c 6f 73 65 06 04 00 00 00 77 61 69 74

; constants (data) -- 
; 0      [ConstFunction]               'print'
; 1      [ConstFunction]               'standard-out'
; 2      [ConstFunction]               'write'
; 3      [ConstFunction]               'this-is-my-function'
; 4      [String]                      'A: '
; 5      [String]                      ' B: '
; 6      [String]                      ' C: '
; 7      [String]                      '\n'
; 8      [String]                      'Math: '
; 9      [Identifier]                  'a'
; 10     [Identifier]                  'b'
; 11     [Identifier]                  'c'
; 12     [Identifier]                  'd'
; 13     [Identifier]                  'e'
; 14     [Identifier]                  'f'
; 15     [Identifier]                  'g'
; 16     [Pair]                        '(g)'
; 17     [Pair]                        '(f g)'
; 18     [Pair]                        '(e f g)'
; 19     [Pair]                        '(d e f g)'
; 20     [Pair]                        '(c d e f g)'
; 21     [Pair]                        '(b c d e f g)'
; 22     [Pair]                        '(a b c d e f g)'
; 23     [PrimitiveT<float>]           '1'
; 24     [String]                      'Hello, my pretties!!!!'
; 25     [String]                      '['
; 26     [String]                      '] '
; 27     [String]                      'Asking - assoc?\n'
; 28     [String]                      ' '
; 29     [Identifier]                  'assoc?'
; 30     [Identifier]                  'x'
; 31     [Identifier]                  '.'
; 32     [Identifier]                  'y'
; 33     [Pair]                        '(y)'
; 34     [Pair]                        '(. y)'
; 35     [Pair]                        '(x . y)'
; 36     [Pair]                        '((x . y))'
; 37     [Pair]                        '(assoc? (x . y))'
; 38     [Pair]                        '(x y)'
; 39     [Pair]                        '((x y))'
; 40     [Pair]                        '(assoc? (x y))'
; 41     [Identifier]                  'count'
; 42     [Pair]                        '(count)'
; 43     [Pair]                        '(assoc? count)'
; 44     [String]                      'Asking - pair?\n'
; 45     [Identifier]                  'pair?'
; 46     [Pair]                        '(pair? (x . y))'
; 47     [Pair]                        '(pair? (x y))'
; 48     [Pair]                        '(pair? count)'
; 49     [String]                      'Asking - atom?\n'
; 50     [Identifier]                  'atom?'
; 51     [Pair]                        '(atom? (x . y))'
; 52     [Pair]                        '(atom? (x y))'
; 53     [Pair]                        '(atom? count)'
; 54     [String]                      'Asking - length\n'
; 55     [Identifier]                  'length'
; 56     [Identifier]                  'z'
; 57     [Pair]                        '(c)'
; 58     [Pair]                        '(b c)'
; 59     [Pair]                        '(a b c)'
; 60     [Pair]                        '(z a b c)'
; 61     [Pair]                        '(y z a b c)'
; 62     [Pair]                        '(x y z a b c)'
; 63     [Pair]                        '((x y z a b c))'
; 64     [Pair]                        '(length (x y z a b c))'
; 65     [Pair]                        '(length (x y))'
; 66     [Pair]                        '(length count)'
; 67     [String]                      'did you get that?'
; 68     [ConstFunction]               'ask'
; 69     [String]                      'This is a Question'
; 70     [String]                      'Answer It!'
; 71     [Pair]                        '(Answer It!)'
; 72     [Pair]                        '(This is a Question Answer It!)'
; 73     [String]                      'User answers ''
; 74     [String]                      ''\n'
; 75     [String]                      'a-new-file.txt'
; 76     [String]                      'a'
; 77     [ConstFunction]               'open-out-file'
; 78     [String]                      'hey little file 2!!\n'
; 79     [ConstFunction]               'open-out-string'
; 80     [String]                      'hola'
; 81     [String]                      'bobby'
; 82     [String]                      'boy!'
; 83     [Identifier]                  'stream'
; 84     [String]                      '\t'
; 85     [Identifier]                  'ask'
; 86     [Identifier]                  'stdout'
; 87     [ConstFunction]               'close'
; 88     [ConstFunction]               'wait'

; code

; function 'MAIN' id=-1 localsize=64 stacksize=10
; 52 07 1c 50 0e 52 08 54 00 09 03 1d 00 6a 00 52
; 16 6a 01 68 01 51 6a 01 68 01 4d 07 1a 00 68 01
; 4e 6a 02 52 17 68 00 2b 6a 00 68 00 68 02 68 00
; 54 03 09 03 0c 08 e0 ff 52 18 6a 03 68 03 51 6a
; 03 68 03 4d 07 13 00 68 03 4e 6a 02 52 1a 68 02
; 52 19 54 00 09 03 0c 08 e7 ff 52 07 54 00 09 01
; 52 07 68 00 54 00 09 02 52 07 68 00 71 52 1c 52
; 2b 52 1c 52 07 52 26 71 52 1c 52 28 52 1c 52 07
; 52 23 71 52 1c 52 25 52 1c 52 1b 54 00 09 10 52
; 07 68 00 78 52 1c 52 30 52 1c 52 07 52 26 78 52
; 1c 52 2f 52 1c 52 07 52 23 78 52 1c 52 2e 52 1c
; 52 2c 54 00 09 10 52 07 68 00 72 52 1c 52 35 52
; 1c 52 07 52 26 72 52 1c 52 34 52 1c 52 07 52 23
; 72 52 1c 52 33 52 1c 52 31 54 00 09 10 52 07 68
; 00 6d 52 1c 52 42 52 1c 52 07 52 26 6d 52 1c 52
; 41 52 1c 52 07 52 3e 6d 52 1c 52 40 52 1c 52 36
; 54 00 09 10 52 43 54 44 09 01 54 44 6a 02 52 48
; 6a 04 52 4a 68 04 68 02 67 52 49 54 00 09 03 52
; 4c 52 4b 54 4d 09 02 6a 05 52 4e 68 05 54 02 09
; 02 54 4f 09 00 6a 06 52 07 52 52 52 1c 52 51 52
; 1c 52 50 68 06 54 02 09 07 68 06 54 00 09 01 52
; 07 68 02 52 54 52 1e 52 07 54 01 09 00 52 54 52
; 56 52 07 54 44 52 54 52 55 52 07 68 05 52 54 52
; 53 54 00 09 10 68 05 54 57 09 01 54 58 09 00 0e

; function 'print' id=0 localsize=1 stacksize=64
; 14 01 00 6c 54 01 09 00 63 01 00 60 02 00 6a 00
; 68 00 54 02 67 15

; function 'this-is-my-function' id=3 localsize=3 stacksize=64
; 14 03 00 52 07 68 02 52 06 68 01 52 05 68 00 52
; 04 54 00 09 07 15


;  function 'MAIN' id=-1 localsize=64 stacksize=10
0      [ 52 07]                       CONST  7                     ; ="\n"
2      [ 1c 50 0e]                    INT    3664          
5      [ 52 08]                       CONST  8                     ; ="Math: "
7      [ 54 00]                       FUNC   0                     ; =fn:print
9      [ 09 03]                       CALL   3                    
11     [ 1d 00]                       INT    0                    
13     [ 6a 00]                       LET    0                    
15     [ 52 16]                       CONST  22                    ; =(a b c d e f g)
17     [ 6a 01]                       LET    1                    
19     [ 68 01]                       LOCAL  1                    
21     [ 51]                          ITER   
22     [ 6a 01]                       LET    1                    
24     [ 68 01]                       LOCAL  1                    
26     [ 4d]                          NEXTP  
27     [ 07 1a 00]                    JN     26            
30     [ 68 01]                       LOCAL  1                    
32     [ 4e]                          NEXT   
33     [ 6a 02]                       LET    2                    
35     [ 52 17]                       CONST  23                    ; =1
37     [ 68 00]                       LOCAL  0                    
39     [ 2b]                          ADD    
40     [ 6a 00]                       LET    0                    
42     [ 68 00]                       LOCAL  0                    
44     [ 68 02]                       LOCAL  2                    
46     [ 68 00]                       LOCAL  0                    
48     [ 54 03]                       FUNC   3                     ; =fn:this-is-my-function
50     [ 09 03]                       CALL   3                    
52     [ 0c]                          YIELD  
53     [ 08 e0 ff]                    JMP    -32             
56     [ 52 18]                       CONST  24                    ; ="Hello, my pretties!!!!"
58     [ 6a 03]                       LET    3                    
60     [ 68 03]                       LOCAL  3                    
62     [ 51]                          ITER   
63     [ 6a 03]                       LET    3                    
65     [ 68 03]                       LOCAL  3                    
67     [ 4d]                          NEXTP  
68     [ 07 13 00]                    JN     19            
71     [ 68 03]                       LOCAL  3                    
73     [ 4e]                          NEXT   
74     [ 6a 02]                       LET    2                    
76     [ 52 1a]                       CONST  26                    ; ="] "
78     [ 68 02]                       LOCAL  2                    
80     [ 52 19]                       CONST  25                    ; ="["
82     [ 54 00]                       FUNC   0                     ; =fn:print
84     [ 09 03]                       CALL   3                    
86     [ 0c]                          YIELD  
87     [ 08 e7 ff]                    JMP    -25             
90     [ 52 07]                       CONST  7                     ; ="\n"
92     [ 54 00]                       FUNC   0                     ; =fn:print
94     [ 09 01]                       CALL   1                    
96     [ 52 07]                       CONST  7                     ; ="\n"
98     [ 68 00]                       LOCAL  0                    
100    [ 54 00]                       FUNC   0                     ; =fn:print
102    [ 09 02]                       CALL   2                    
104    [ 52 07]                       CONST  7                     ; ="\n"
106    [ 68 00]                       LOCAL  0                    
108    [ 71]                          ASSOCP 
109    [ 52 1c]                       CONST  28                    ; =" "
111    [ 52 2b]                       CONST  43                    ; =(assoc? count)
113    [ 52 1c]                       CONST  28                    ; =" "
115    [ 52 07]                       CONST  7                     ; ="\n"
117    [ 52 26]                       CONST  38                    ; =(x y)
119    [ 71]                          ASSOCP 
120    [ 52 1c]                       CONST  28                    ; =" "
122    [ 52 28]                       CONST  40                    ; =(assoc? (x y))
124    [ 52 1c]                       CONST  28                    ; =" "
126    [ 52 07]                       CONST  7                     ; ="\n"
128    [ 52 23]                       CONST  35                    ; =(x . y)
130    [ 71]                          ASSOCP 
131    [ 52 1c]                       CONST  28                    ; =" "
133    [ 52 25]                       CONST  37                    ; =(assoc? (x . y))
135    [ 52 1c]                       CONST  28                    ; =" "
137    [ 52 1b]                       CONST  27                    ; ="Asking - assoc?\n"
139    [ 54 00]                       FUNC   0                     ; =fn:print
141    [ 09 10]                       CALL   16                   
143    [ 52 07]                       CONST  7                     ; ="\n"
145    [ 68 00]                       LOCAL  0                    
147    [ 78]                          PAIRP  
148    [ 52 1c]                       CONST  28                    ; =" "
150    [ 52 30]                       CONST  48                    ; =(pair? count)
152    [ 52 1c]                       CONST  28                    ; =" "
154    [ 52 07]                       CONST  7                     ; ="\n"
156    [ 52 26]                       CONST  38                    ; =(x y)
158    [ 78]                          PAIRP  
159    [ 52 1c]                       CONST  28                    ; =" "
161    [ 52 2f]                       CONST  47                    ; =(pair? (x y))
163    [ 52 1c]                       CONST  28                    ; =" "
165    [ 52 07]                       CONST  7                     ; ="\n"
167    [ 52 23]                       CONST  35                    ; =(x . y)
169    [ 78]                          PAIRP  
170    [ 52 1c]                       CONST  28                    ; =" "
172    [ 52 2e]                       CONST  46                    ; =(pair? (x . y))
174    [ 52 1c]                       CONST  28                    ; =" "
176    [ 52 2c]                       CONST  44                    ; ="Asking - pair?\n"
178    [ 54 00]                       FUNC   0                     ; =fn:print
180    [ 09 10]                       CALL   16                   
182    [ 52 07]                       CONST  7                     ; ="\n"
184    [ 68 00]                       LOCAL  0                    
186    [ 72]                          ATOMP  
187    [ 52 1c]                       CONST  28                    ; =" "
189    [ 52 35]                       CONST  53                    ; =(atom? count)
191    [ 52 1c]                       CONST  28                    ; =" "
193    [ 52 07]                       CONST  7                     ; ="\n"
195    [ 52 26]                       CONST  38                    ; =(x y)
197    [ 72]                          ATOMP  
198    [ 52 1c]                       CONST  28                    ; =" "
200    [ 52 34]                       CONST  52                    ; =(atom? (x y))
202    [ 52 1c]                       CONST  28                    ; =" "
204    [ 52 07]                       CONST  7                     ; ="\n"
206    [ 52 23]                       CONST  35                    ; =(x . y)
208    [ 72]                          ATOMP  
209    [ 52 1c]                       CONST  28                    ; =" "
211    [ 52 33]                       CONST  51                    ; =(atom? (x . y))
213    [ 52 1c]                       CONST  28                    ; =" "
215    [ 52 31]                       CONST  49                    ; ="Asking - atom?\n"
217    [ 54 00]                       FUNC   0                     ; =fn:print
219    [ 09 10]                       CALL   16                   
221    [ 52 07]                       CONST  7                     ; ="\n"
223    [ 68 00]                       LOCAL  0                    
225    [ 6d]                          LENGTH 
226    [ 52 1c]                       CONST  28                    ; =" "
228    [ 52 42]                       CONST  66                    ; =(length count)
230    [ 52 1c]                       CONST  28                    ; =" "
232    [ 52 07]                       CONST  7                     ; ="\n"
234    [ 52 26]                       CONST  38                    ; =(x y)
236    [ 6d]                          LENGTH 
237    [ 52 1c]                       CONST  28                    ; =" "
239    [ 52 41]                       CONST  65                    ; =(length (x y))
241    [ 52 1c]                       CONST  28                    ; =" "
243    [ 52 07]                       CONST  7                     ; ="\n"
245    [ 52 3e]                       CONST  62                    ; =(x y z a b c)
247    [ 6d]                          LENGTH 
248    [ 52 1c]                       CONST  28                    ; =" "
250    [ 52 40]                       CONST  64                    ; =(length (x y z a b c))
252    [ 52 1c]                       CONST  28                    ; =" "
254    [ 52 36]                       CONST  54                    ; ="Asking - length\n"
256    [ 54 00]                       FUNC   0                     ; =fn:print
258    [ 09 10]                       CALL   16                   
260    [ 52 43]                       CONST  67                    ; ="did you get that?"
262    [ 54 44]                       FUNC   68                    ; =fn:ask
264    [ 09 01]                       CALL   1                    
266    [ 54 44]                       FUNC   68                    ; =fn:ask
268    [ 6a 02]                       LET    2                    
270    [ 52 48]                       CONST  72                    ; =(This is a Question Answer It!)
272    [ 6a 04]                       LET    4                    
274    [ 52 4a]                       CONST  74                    ; ="'\n"
276    [ 68 04]                       LOCAL  4                    
278    [ 68 02]                       LOCAL  2                    
280    [ 67]                          APPLY  
281    [ 52 49]                       CONST  73                    ; ="User answers '"
283    [ 54 00]                       FUNC   0                     ; =fn:print
285    [ 09 03]                       CALL   3                    
287    [ 52 4c]                       CONST  76                    ; ="a"
289    [ 52 4b]                       CONST  75                    ; ="a-new-file.txt"
291    [ 54 4d]                       FUNC   77                    ; =fn:open-out-file
293    [ 09 02]                       CALL   2                    
295    [ 6a 05]                       LET    5                    
297    [ 52 4e]                       CONST  78                    ; ="hey little file 2!!\n"
299    [ 68 05]                       LOCAL  5                    
301    [ 54 02]                       FUNC   2                     ; =fn:write
303    [ 09 02]                       CALL   2                    
305    [ 54 4f]                       FUNC   79                    ; =fn:open-out-string
307    [ 09 00]                       CALL   0                    
309    [ 6a 06]                       LET    6                    
311    [ 52 07]                       CONST  7                     ; ="\n"
313    [ 52 52]                       CONST  82                    ; ="boy!"
315    [ 52 1c]                       CONST  28                    ; =" "
317    [ 52 51]                       CONST  81                    ; ="bobby"
319    [ 52 1c]                       CONST  28                    ; =" "
321    [ 52 50]                       CONST  80                    ; ="hola"
323    [ 68 06]                       LOCAL  6                    
325    [ 54 02]                       FUNC   2                     ; =fn:write
327    [ 09 07]                       CALL   7                    
329    [ 68 06]                       LOCAL  6                    
331    [ 54 00]                       FUNC   0                     ; =fn:print
333    [ 09 01]                       CALL   1                    
335    [ 52 07]                       CONST  7                     ; ="\n"
337    [ 68 02]                       LOCAL  2                    
339    [ 52 54]                       CONST  84                    ; ="\t"
341    [ 52 1e]                       CONST  30                    ; =x
343    [ 52 07]                       CONST  7                     ; ="\n"
345    [ 54 01]                       FUNC   1                     ; =fn:standard-out
347    [ 09 00]                       CALL   0                    
349    [ 52 54]                       CONST  84                    ; ="\t"
351    [ 52 56]                       CONST  86                    ; =stdout
353    [ 52 07]                       CONST  7                     ; ="\n"
355    [ 54 44]                       FUNC   68                    ; =fn:ask
357    [ 52 54]                       CONST  84                    ; ="\t"
359    [ 52 55]                       CONST  85                    ; =ask
361    [ 52 07]                       CONST  7                     ; ="\n"
363    [ 68 05]                       LOCAL  5                    
365    [ 52 54]                       CONST  84                    ; ="\t"
367    [ 52 53]                       CONST  83                    ; =stream
369    [ 54 00]                       FUNC   0                     ; =fn:print
371    [ 09 10]                       CALL   16                   
373    [ 68 05]                       LOCAL  5                    
375    [ 54 57]                       FUNC   87                    ; =fn:close
377    [ 09 01]                       CALL   1                    
379    [ 54 58]                       FUNC   88                    ; =fn:wait
381    [ 09 00]                       CALL   0                    
383    [ 0e]                          END    

;  function 'print' id=0 localsize=1 stacksize=64
0      [ 14 01 00]                    PROC   1             
3      [ 6c]                          ARGS   
4      [ 54 01]                       FUNC   1                     ; =fn:standard-out
6      [ 09 00]                       CALL   0                    
8      [ 63 01 00]                    LIST   1             
11     [ 60 02 00]                    APPEND 2             
14     [ 6a 00]                       LET    0                    
16     [ 68 00]                       LOCAL  0                    
18     [ 54 02]                       FUNC   2                     ; =fn:write
20     [ 67]                          APPLY  
21     [ 15]                          RET    

;  function 'this-is-my-function' id=3 localsize=3 stacksize=64
0      [ 14 03 00]                    PROC   3             
3      [ 52 07]                       CONST  7                     ; ="\n"
5      [ 68 02]                       LOCAL  2                    
7      [ 52 06]                       CONST  6                     ; =" C: "
9      [ 68 01]                       LOCAL  1                    
11     [ 52 05]                       CONST  5                     ; =" B: "
13     [ 68 00]                       LOCAL  0                    
15     [ 52 04]                       CONST  4                     ; ="A: "
17     [ 54 00]                       FUNC   0                     ; =fn:print
19     [ 09 07]                       CALL   7                    
21     [ 15]                          RET    

